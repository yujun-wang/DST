{
  "name": "jscs-jsdoc",
  "author": {
    "name": "Alexej Yaroshevich",
    "email": "alex@qfox.ru"
  },
  "description": "JSCS jsdoc plugin",
  "version": "0.0.23",
  "main": "lib/index",
  "homepage": "https://github.com/jscs-dev/jscs-jsdoc",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/jscs-dev/jscs-jsdoc"
  },
  "bugs": {
    "url": "https://github.com/jscs-dev/jscs-jsdoc/issues"
  },
  "contributors": [
    {
      "name": "Alexej Yaroshevich",
      "email": "alex@qfox.ru"
    }
  ],
  "engines": {
    "node": ">= 0.10.0"
  },
  "dependencies": {
    "comment-parser": "^0.2.2",
    "jsdoctypeparser": "^1.1.3"
  },
  "devDependencies": {
    "browserify": "~3.30.2",
    "chai": "^1.9.1",
    "esprima": "^1.2.2",
    "jscs": ">=1.5.9 <2.0",
    "jshint": "~2.5.4",
    "mocha": "~1.17.1"
  },
  "peerDependencies": {
    "jscs": ">=1.3.0 <2.0"
  },
  "scripts": {
    "lint": "jshint lib test && jscs lib test",
    "test": "npm run lint && mocha",
    "browserify": "browserify --standalone JscsPluginJsdoc lib/index.js -o jscs-jsdoc-browser.js"
  },
  "files": [
    "lib",
    "LICENSE"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/jscs-dev/jscs-jsdoc/raw/master/LICENSE"
    }
  ],
  "readme": "# jscs-jsdoc\n[![Build Status](https://secure.travis-ci.org/jscs-dev/jscs-jsdoc.svg?branch=master)](http://travis-ci.org/jscs-dev/jscs-jsdoc)\n[![NPM version](https://badge.fury.io/js/jscs-jsdoc.png)](http://badge.fury.io/js/jscs-jsdoc)\n[![Dependency Status](https://david-dm.org/jscs-dev/jscs-jsdoc.png)](https://david-dm.org/jscs-dev/jscs-jsdoc)\n\n`jsdoc` plugin for [jscs](https://github.com/jscs-dev/node-jscs/). [Twitter](https://twitter.com/jscs_dev) | [Mailing List](https://groups.google.com/group/jscs-dev)\n\n## Table of Contents\n\n- [Installation](#plugin-installation)\n- [Versioning & Semver](#versioning--semver)\n- [Usage](#usage)\n- [Rules](#rules)\n- [Browser Usage](#browser-usage)\n\n## Plugin installation\n\n`jscs-jsdoc` can be installed using NPM and requires [jscs](https://github.com/jscs-dev/node-jscs/#installation).\n\nInstall it globally if you are using globally installed `jscs`\n\n    npm -g install jscs-jsdoc\n\nBut better install it into your project\n\n    npm install jscs-jsdoc --save-dev\n\n## Versioning & Semver\n\nWe recommend installing `jscs-jsdoc` via NPM using `^`, or `~` if you want more stable releases.\n\nSemver (http://semver.org/) dictates that breaking changes be major version bumps. In the context of a linting tool, a bug fix that causes more errors to be reported can be interpreted as a breaking change. However, that would require major version bumps to occur more often than can be desirable. Therefore, as a compromise, we will only release bug fixes that cause more errors to be reported in minor versions.\n\nBelow you fill find our versioning strategy, and what you can expect to come out of a new `jscs-jsdoc` release.\n\n * Patch release:\n   * A bug fix in a rule that causes `jscs-jsdoc` to report less errors;\n   * Docs, refactoring and other \"invisible\" changes for user;\n * Minor release:\n   * Any preset changes;\n   * A bug fix in a rule that causes `jscs-jsdoc` to report more errors;\n   * New rules or new options for existing rules that don't change existing behavior;\n   * Modifying rules so they report less errors, and don't cause build failures;\n * Major release:\n   * Purposefully modifying existing rules so that they report more errors or change the meaning of a rule;\n   * Any architectural changes that could cause builds to fail.\n\n## Usage\n\nTo use plugin you should add these lines to configuration file `.jscsrc`:\n\n```json\n{\n    \"additionalRules\": [\n        \"node_modules/jscs-jsdoc/lib/rules/*.js\"\n    ],\n    \"jsDoc\": {\n        \"enforceExistence\": true\n    }\n}\n```\n\n## Rules\n\n### checkParamNames\n\nEnsures param names in jsdoc and in function declaration are equal\n\nType: `Boolean`\n\nValues: `true`\n\nContext: `functions`\n\nTags: `param`, `arg`, `argument`\n\n#### Example\n\n```js\n\"checkParamNames\": true\n```\n\n##### Valid\n\n```js\n/**\n * @param {String} message\n * @param {Number|Object} [line]\n */\nfunction method(message, line) {}\n```\n\n##### Invalid\n\n```js\n/**\n * @param {String} msg\n * @param {Number|Object} [line]\n */\nfunction method(message) {}\n```\n\n### requireParamTypes\n\nEnsures params in jsdoc contains type\n\nType: `Boolean`\n\nValues: `true`\n\nContext: `functions`\n\nTags: `param`, `arg`, `argument`\n\n#### Example\n\n```js\n\"requireParamTypes\": true\n```\n\n##### Valid\n\n```js\n/**\n * @param {String} message\n */\nfunction method() {}\n```\n\n##### Invalid\n\n```js\n/**\n * @param message\n */\nfunction method() {}\n```\n\n### checkRedundantParams\n\nReports redundant params in jsdoc\n\nType: `Boolean`\n\nValues: `true`\n\nContext: `functions`\n\nTags: `param`, `arg`, `argument`\n\n#### Example\n\n```js\n\"checkRedundantParams\": true\n```\n\n##### Valid\n\n```js\n/**\n * @param {String} message\n */\nfunction method(message) {}\n```\n\n##### Invalid\n\n```js\n/**\n * @param {String} message\n */\nfunction method(message) {}\n```\n\n### checkReturnTypes\n\nReports discrepancies between the claimed in jsdoc and actual type if both exist (code scan)\n\nType: `Boolean`\n\nValues: `true`\n\nContext: `functions`\n\nTags: `return`, `returns`\n\n#### Example\n\n```js\n\"checkReturnTypes\": true\n```\n\n##### Valid\n\n```js\n/**\n * @returns {String}\n */\nfunction method() {\n    return 'foo';\n}\n```\n\n##### Invalid\n\n```js\n/**\n * @returns {String}\n */\nfunction method(f) {\n    if (f) {\n        return true;\n    }\n    return 1;\n}\n```\n\n### checkRedundantReturns\n\nReport statements for functions with no return\n\nType: `Boolean`\n\nValues: `true`\n\nContext: `functions`\n\nTags: `return`, `returns`\n\n#### Example\n\n```js\n\"checkRedundantReturns\": true\n```\n\n##### Valid\n\n```js\n/**\n * @returns {string}\n */\nfunction f() {\n    return 'yes';\n}\n```\n\n##### Invalid\n\n```js\n/**\n * @returns {string}\n */\nfunction f() {\n    // no return here\n}\n```\n\n### requireReturnTypes\n\nEnsures returns in jsdoc contains type\n\nType: `Boolean`\n\nValues: `true`\n\nContext: `functions`\n\nTags: `return`, `returns`\n\n#### Example\n\n```js\n\"requireReturnTypes\": true\n```\n\n##### Valid\n\n```js\n/**\n * @returns {String}\n */\nfunction method() {}\n\n/**\n * no @return\n */\nfunction method() {}\n```\n\n##### Invalid\n\n```js\n/**\n * @returns\n */\nfunction method() {}\n```\n\n### checkTypes\n\nReports invalid types for bunch of tags\n\nType: `Boolean`\n\nValues: `true`\n\nContext: `*`\n\nTags: `typedef`, `type`, `param`, `return`, `returns`, `enum`, `var`, `prop`, `property`, `arg`, `argument`, `cfg`, `lends`, `extends`, `implements`, `define`\n\n#### Example\n\n```js\n\"checkTypes\": true\n```\n\n##### Valid\n\n```js\n/**\n * @typedef {Object} ObjectLike\n * @property {boolean} hasFlag\n * @property {string} name\n */\n\n/** @type {number} */\nvar bar = 1;\n\n/** @const {number} */\nvar FOO = 2;\n\n/**\n * @const\n * @type {number}\n */\nvar BAZ = 3;\n\n/**\n * @param {SomeX} x\n * @returns {string}\n */\nfunction method(x) {}\n```\n\n##### Invalid\n\n```js\n/** @type {some~number} */\nvar x = 1;\n```\n\n### checkRedundantAccess\n\nReports redundant access declarations\n\nType: `Boolean`\n\nValues: `true`\n\nContext: `functions`\n\nTags: `access`, `private`, `protected`, `public`\n\n#### Example\n\n```js\n\"checkRedundantAccess\": true\n```\n\n##### Valid\n\n```js\n/**\n * @access private\n */\nfunction _f() {}\n```\n\n##### Invalid\n\n```js\n/**\n * @private\n * @access private\n */\nfunction _f() {}\n```\n\n### leadingUnderscoreAccess\n\nEnsures access declaration is set for `_underscored` function names\n\nType: `Boolean` or `String`\n\nValues: `true` (means not public), `\"private\"`, `\"protected\"`\n\nContext: `functions`\n\nTags: `access`, `private`, `protected`, `public`\n\n#### Example\n\n```js\n\"checkRedundantAccess\": \"protected\"\n```\n\n##### Valid\n\n```js\n/**\n * @protected\n */\nfunction _f() {}\n```\n\n##### Invalid\n\n```js\nfunction _g() {}\n\n/**\n * @private\n */\nfunction _e() {}\n```\n\n### enforceExistence\n\nEnsures jsdoc block exist\n\nType: `Boolean`\n\nValues: `true`\n\nContext: `functions`\n\n#### Example\n\n```js\n\"enforceExistence\": true\n```\n\n##### Valid\n\n```js\n/**\n * @protected\n */\nfunction _f() {}\n```\n\n##### Invalid\n\n```js\nfunction _g() {}\n```\n\n## Browser Usage\n\nNOT SUPPORTED ATM. SORRY.\n\nFile [jscs-jsdoc-browser.js](jscs-jsdoc-browser.js) contains browser-compatible version of `jscs-jsdoc`.\n\nDownload and include `jscs-jsdoc-browser.js` into your page just after `jscs-browser.js`.\n\n```html\n<script src=\"jscs-browser.js\"></script>\n<script src=\"jscs-jsdoc-browser.js\"></script>\n<script>\n    var checker = new JscsStringChecker();\n    checker.registerDefaultRules();\n    checker.configure({'jsDoc': {/* ... */}});\n    var errors = checker.checkString('var x, y = 1;');\n    errors.getErrorList().forEach(function (error) {\n        console.log(errors.explainError(error));\n    });\n</script>\n```\n",
  "readmeFilename": "README.md",
  "_id": "jscs-jsdoc@0.0.23",
  "dist": {
    "shasum": "b4ea25111eadffc9132aff399468375ead229f13"
  },
  "_from": "jscs-jsdoc@0.0.23",
  "_resolved": "https://registry.npmjs.org/jscs-jsdoc/-/jscs-jsdoc-0.0.23.tgz"
}
